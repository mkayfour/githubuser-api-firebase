{"version":3,"sources":["context/UserContext.js","components/UserCard.js","components/Repos.js","pages/Home.js","pages/SignUp.js","pages/SignIn.js","pages/NotFound.js","layout/Footer.js","layout/Header.js","App.js","config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserCard","user","Card","className","src","avatar_url","alt","CardBody","name","location","bio","followers","hireable","Repos","repos_url","useState","repos","setRepos","useEffect","a","Axios","get","data","fetchRepos","ListGroup","map","repo","ListGroupItem","key","id","language","description","Home","context","useContext","query","setQuery","setUser","fetchDetails","toast","uid","Container","Row","Col","md","InputGroup","Input","type","value","placeholder","onChange","e","target","InputGroupAddon","addonType","Button","color","onClick","to","SignUp","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","createUserWithEmailAndPassword","then","res","catch","err","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","SignIn","signInWithEmailAndPassword","NotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.fe18f0f7.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;\r\n","import React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\n\r\nconst UserCard = ({ user }) => {\r\n  return (\r\n    <Card className='text-center mt-3 mb-4'>\r\n      <img src={user.avatar_url} className='img-thumbnail' alt='user avatar' />\r\n      <CardBody>\r\n        <div className='text-primary'>{user.name}</div>\r\n        <div className='text-primary'>Location: {user.location}</div>\r\n        <div className='text-info'>Bio: {user.bio}</div>\r\n        <div className='text-primary'>Followers: {user.followers}</div>\r\n        <div className='text-danger'>Available For Hire: {user.hireable ? 'YES' : 'NO'}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst Repos = ({ repos_url }) => {\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRepos = async () => {\r\n      const { data } = await Axios.get(repos_url);\r\n      setRepos(data);\r\n    };\r\n\r\n    fetchRepos();\r\n  }, [repos_url]);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {repos.map((repo) => (\r\n        <ListGroupItem key={repo.id}>\r\n          <div className='text-primary'>{repo.name}</div>\r\n          <div className='text-secondary'>{repo.language}</div>\r\n          <div className='text-info'>{repo.description}</div>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import React, { useState, useContext } from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\n\r\nimport UserCard from '../components/UserCard';\r\nimport Repos from '../components/Repos';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Home = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  const fetchDetails = async () => {\r\n    try {\r\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\r\n      setUser(data);\r\n    } catch (err) {\r\n      toast('user not found');\r\n    }\r\n  };\r\n\r\n  if (!context.user?.uid) return <Redirect to='/signup' />;\r\n  else {\r\n    return (\r\n      <Container>\r\n        <Row className=' mt-3'>\r\n          <Col md='5'>\r\n            <InputGroup>\r\n              <Input\r\n                type='text'\r\n                value={query}\r\n                placeholder='Please provide the username'\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n              <InputGroupAddon addonType='append'>\r\n                <Button color='primary' onClick={fetchDetails}>\r\n                  Fetch User\r\n                </Button>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            {user ? <UserCard user={user} /> : ''}\r\n          </Col>\r\n          <Col md='7'>{user ? <Repos repos_url={user.repos_url} /> : ''}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader\r\n} from 'reactstrap';\r\n\r\nimport firebase from 'firebase/app';\r\nimport UserContext from '../context/UserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SignUp = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((err) => {\r\n        toast(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to='/' />;\r\n  } else {\r\n    return (\r\n      <Container className='text-center'>\r\n        <Row>\r\n          <Col lg={6} className='offset-lg-3 mt-5'>\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardHeader className=''>Sign Up Form</CardHeader>\r\n                <CardBody>\r\n                  <FormGroup row>\r\n                    <Label for='email' sm={3}>\r\n                      Email\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type='email'\r\n                        name='email'\r\n                        id='email'\r\n                        placeholder='Provide your email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Label for='password' sm={3}>\r\n                      Password\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        placeholder='Your password here'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button type='submit' block color='primary'>\r\n                    Sign Up\r\n                  </Button>\r\n                </CardFooter>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader\r\n} from 'reactstrap';\r\n\r\nimport firebase from 'firebase/app';\r\nimport UserContext from '../context/UserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SignIn = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSignIn = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch((err) => {\r\n        toast(err.message, 'error');\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignIn();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to='/' />;\r\n  } else {\r\n    return (\r\n      <Container className='text-center'>\r\n        <Row>\r\n          <Col lg={6} className='offset-lg-3 mt-5'>\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardHeader className=''>Sign In </CardHeader>\r\n                <CardBody>\r\n                  <FormGroup row>\r\n                    <Label for='email' sm={3}>\r\n                      Email\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type='email'\r\n                        name='email'\r\n                        id='email'\r\n                        placeholder='Provide your email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Label for='password' sm={3}>\r\n                      Password\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        placeholder='Your password here'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button type='submit' block color='primary'>\r\n                    Sign In\r\n                  </Button>\r\n                </CardFooter>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react'\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Page Not Found </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Container\r\n      fluid\r\n      tag='footer'\r\n      className='text-right bg-info text-white text-uppercase fixed-bottom p-1'\r\n    >\r\n      CopyRight @MohitKumar\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport UserContext  from \"../context/UserContext\";\r\n\r\nconst Header = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar color=\"info\" light expand=\"md\">\r\n      <NavbarBrand>\r\n        <Link to=\"/\" className=\"text-white\">\r\n         Github Firebase App\r\n        </Link>\r\n      </NavbarBrand>\r\n      <NavbarText className=\"text-white\">\r\n        {context.user?.email ? context.user.email : \"\"}\r\n      </NavbarText>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          {context.user ? (\r\n            <NavItem>\r\n              <NavLink onClick={()=> context.setUser(null)} className=\"text-white\">\r\n                Log out\r\n              </NavLink>\r\n            </NavItem>\r\n          ) : (\r\n            <>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signup\" className=\"text-white\">\r\n                  Sign Up\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/signin\" className=\"text-white\">\r\n                  Sign In\r\n                </NavLink>\r\n              </NavItem>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './App.css';\n\nimport UserContext from './context/UserContext';\nimport { ToastContainer } from 'react-toastify';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport Home from './pages/Home';\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport NotFound from './pages/NotFound';\nimport Footer from './layout/Footer';\nimport Header from './layout/Header';\n\nimport firebaseConfig from './config/firebaseConfig';\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/signup' component={SignUp} />\n          <Route exact path='/signin' component={SignIn} />\n          <Route exact path='*' component={NotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\r\n  apiKey: 'AIzaSyAD-klvGYStzBEF79ex7_-WM1yMTIMnAp4',\r\n  authDomain: 'gitapp-2a111.firebaseapp.com',\r\n  databaseURL: 'https://gitapp-2a111.firebaseio.com',\r\n  projectId: 'gitapp-2a111',\r\n  storageBucket: 'gitapp-2a111.appspot.com',\r\n  messagingSenderId: '1023767387628',\r\n  appId: '1:1023767387628:web:8cffc4cdce4ded1556f4c9',\r\n  measurementId: 'G-DPP5KZ8DRX'\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}